<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.admin.dao.ChuKuInfoMapper" >
  <resultMap id="BaseResultMap" type="com.admin.entity.ChuKuInfo" >
    <id column="chu_id" property="chuId" jdbcType="INTEGER" />
    <result column="chu_amount" property="chuAmount" jdbcType="INTEGER" />
    <result column="bill_id" property="billId" jdbcType="INTEGER" />
    <result column="chu_date" property="chuDate" jdbcType="TIMESTAMP" />
    <result column="chu_peo" property="chuPeo" jdbcType="VARCHAR" />
    <result column="chu_pro_id" property="chuProId" jdbcType="INTEGER" />
    <result column="chu_remark" property="chuRemark" jdbcType="VARCHAR" />
    <result column="chu_state" property="chuState" jdbcType="INTEGER" />
  </resultMap>


  <sql id="Base_Column_List" >
    chu_id, chu_amount, bill_id, chu_date, chu_peo, chu_pro_id, chu_remark, chu_state
  </sql>

  <select id="selectByPrimaryKey" resultType="Map" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from chuku_info
    where chu_id = #{chuId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from chuku_info
    where chu_id = #{chuId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.admin.entity.ChuKuInfo" >
    insert into chuku_info (chu_amount, bill_id,
      chu_date, chu_peo, chu_pro_id, 
      chu_remark, chu_state)
    values (#{chuAmount,jdbcType=INTEGER}, #{billId,jdbcType=INTEGER},
      #{chuDate,jdbcType=TIMESTAMP}, #{chuPeo,jdbcType=VARCHAR}, #{chuProId,jdbcType=INTEGER}, 
      #{chuRemark,jdbcType=VARCHAR}, #{chuState,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.admin.entity.ChuKuInfo" >
    update chuku_info
    set chu_amount = #{chuAmount,jdbcType=INTEGER},
      bill_id = #{billId,jdbcType=INTEGER},
      chu_date = #{chuDate,jdbcType=TIMESTAMP},
      chu_peo = #{chuPeo,jdbcType=VARCHAR},
      chu_pro_id = #{chuProId,jdbcType=INTEGER},
      chu_remark = #{chuRemark,jdbcType=VARCHAR},
      chu_state = #{chuState,jdbcType=INTEGER}
    where chu_id = #{chuId,jdbcType=INTEGER}
  </update>

  <select id="getAllChuKuInfo" resultType="Map">
    SELECT a.chu_id, a.chu_amount, a.bill_id,a.chu_date, a.chu_peo, a.chu_pro_id, a.chu_remark, a.chu_state,
   b.bill_id,b.bill_name , b.bill_company, b.bill_price, b.bill_time, b.provider_name, b.bill_state,
    b.bill_person, b.bill_remark, b.bill_amount, b.bill_money, b.provider_id
    from chuku_info a LEFT JOIN bill_info  b on a.bill_id=b.bill_id limit #{colOffset},#{pageSize}
  </select>
  <select id="getChuKuCount" resultType="int">
    select count(*) from chuku_info
  </select>
  <select id="getAllChuKuInfoSearch" resultType="Map">
    SELECT a.chu_id, a.chu_amount, a.bill_id,a.chu_date, a.chu_peo, a.chu_pro_id, a.chu_remark, a.chu_state,
   b.bill_id,b.bill_name , b.bill_company, b.bill_price, b.bill_time, b.provider_name, b.bill_state,
    b.bill_person, b.bill_remark, b.bill_amount, b.bill_money, b.provider_id
    from chuku_info a LEFT JOIN bill_info  b on a.bill_id=b.bill_id
    where b.bill_name like CONCAT(CONCAT('%',#{search}),'%')
     or a.chu_remark like CONCAT(CONCAT('%',#{search}),'%')
     or a.chu_peo like CONCAT(CONCAT('%',#{search}),'%')
    limit #{colOffset},#{pageSize}
  </select>
  <select id="getChuKuCountSearch" resultType="int">
  select count(*) from chuku_info a where a.chu_remark like CONCAT(CONCAT('%',#{search}),'%')
     or a.chu_peo like CONCAT(CONCAT('%',#{search}),'%')
  </select>
  <select id="getChuKuById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select * from chuku_info where chu_id=#{chuId}
  </select>
</mapper>